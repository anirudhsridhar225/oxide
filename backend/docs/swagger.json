{
    "swagger": "2.0",
    "info": {
        "description": "Oxide backend API with math operations and utilities",
        "title": "Oxide API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.oxide.io/support",
            "email": "support@oxide.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "Returns a simple hello message",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "general"
                ],
                "summary": "Root endpoint",
                "responses": {
                    "200": {
                        "description": "hello",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/add": {
            "get": {
                "description": "Add two integers provided as query parameters",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "math"
                ],
                "summary": "Add two numbers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "First number",
                        "name": "a",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Second number",
                        "name": "b",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sum of the two numbers",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/hello": {
            "get": {
                "description": "Returns a hello message from backend",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "general"
                ],
                "summary": "Hello endpoint",
                "responses": {
                    "200": {
                        "description": "hello from backend",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "description": "Retrieves all users from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/add": {
            "post": {
                "description": "adds a new user to the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Add a user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/delete": {
            "delete": {
                "description": "Deletes a user from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/verify": {
            "post": {
                "description": "Checks whether the user is verified or not by sending them an email and waiting for the email link to be verified",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Verify a user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/teapot": {
            "get": {
                "description": "Determines if you are worthy of chai",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tea"
                ],
                "summary": "Teapot",
                "responses": {
                    "418": {
                        "description": "I'm a teapot",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "handler.UserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.Session": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "repoURL": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "emailVerified": {
                    "type": "boolean"
                },
                "githubId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Session"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "responses.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "responses.UserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        }
    }
}